import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));

        String color1 = bf.readLine().trim(); // 첫 번째 색
        String color2 = bf.readLine().trim(); // 두 번째 색
        String color3 = bf.readLine().trim(); // 세 번째 색

        StringBuilder resistanceResult = new StringBuilder();

        Long result = 0L;

        resistanceResult.append(colorToResistance(color1));
        resistanceResult.append(colorToResistance(color2));

        result = Long.parseLong(resistanceResult.toString()) * colorToMultiple(color3);

        System.out.println(result);
    }


    private static String colorToResistance(String color) {
        String result = "";
            switch (color) {
                case "black": result = "0"; break;
                case "brown": result = "1"; break;
                case "red": result = "2"; break;
                case "orange": result = "3"; break;
                case "yellow": result = "4"; break;
                case "green": result = "5"; break;
                case "blue": result = "6"; break;
                case "violet": result = "7"; break;
                case "grey": result = "8"; break;
                case "white": result = "9"; break;
        }
        return result;
    }

    private static Long colorToMultiple(String color) {
        Long result = 0L;
        switch (color) {
            case "black": result = 1L; break;
            case "brown": result = 10L; break;
            case "red": result = 100L; break;
            case "orange": result = 1000L; break;
            case "yellow": result = 10000L; break;
            case "green": result = 100000L; break;
            case "blue": result = 1000000L; break;
            case "violet": result = 10000000L; break;
            case "grey": result = 100000000L; break;
            case "white": result = 1000000000L; break;
        }
        return result;
    }
}
